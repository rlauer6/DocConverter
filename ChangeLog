Thu Jul  3 14:09:58 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.4]:
	* TODO.md
	* upload.js: new
	* upload.html: new
	* VERSION: bump
	* Makefile
	- use version.mk
	- rm -f .pm files
	* doc-converter-handler.yml: + max_sleep_period
	* docker-compose.yml
	- upload.js, apache.conf
	* lib/DocConverter/Client.pm.in
	- remove bucket_name attribute, move to DocConverter::Role::S3
	(get_document_status): minor refactor
	(download_file): download .dat file
	(upload_file)
	- upload as {document-id}.dat
	- only send message if we are going to convert or create thumbs
	- pass key/value pairs to put_object
	(new)
	- no_logger
	* lib/DocConverter/Constants.pm.in
	- + $COMMA, $DEFAULT_MAX_KEYS
	* lib/DocConverter/Handler.pm.in
	- pod
	- add versioning
	- DOC_CONVERTER_AUTH
	- set DocConverter::Client logger to Apache's logger
	(handler):
	- parse parameters from query string and pass to APIs
	- new endpoints: /converter/list, /converter/version
	- new method: DELETE
	(get_session_cookie): new
	(_api_version): new
	(_api_delete): new
	(_api_list): new
	(_api_upload)
	- no need to link, just pass tempfile to upload_file
	- set document_id element in metadata
	- send thumb parameters to upload_file
	- default action = 'store'
	- add upload time, date to metadata
	(_api_metadata): new
	(_api_download)
	- SERVER_ERROR if $EVAL_ERROR
	- support downloading .pdf, .png and preview tag
	(inline_image_tag): new
	* lib/DocConverter/Role/Helpers.pm.in
	(cvt2png): + $infile
	(create_outfile): removed
	(find_in_folder) => (fetch_document)
	- return .dat file
	(convert_document)
	- removed file parameter
	- fix log message
	- pass key/value pairs to put object
	- fetch_document
	- document_id, not document-id return element
	- create thumbs from original file, not .pdf if .png or .jpe?g
	(write_status): pass key/value pairs
	(create_thumb_nails)
	- likewise
	- thumb is ref or scalar
	* lib/DocConverter/Role/S3.pm.in
	- + bucket-name, max_keys
	(init_s3_client): accept bucket_name
	(put_object)
	- accept key/value pairs
	- accept name to store object as
	- use bucket()
	(fetch_metadata): new
	(s3_client): new
	(bucket): new
	(fetch_object): new
	(get_object)
	- raw flag to return value, not tmpfile
	(list_folders): new
	(list_folder): new
	(_list_folder): new
	(fetch_folders): new
	(list_bucket): use bucket()
	* lib/DocConverter/Role/SQS.pm.in
	(init_sqs_client)
	- accept log_level arg
	- set Amazon::API::SQS log level from passed arg
	* lib/DocConverter/Utils.pm.in
	- remove list_bucket, moved to DocConverter::Role::S3
	(init_logger): call easy_init only if not initialized
	* lib/SQS/Queue/Worker/DocConverter.pm.in
	(handler)
	- -pdf parameter
	- send action, content_type to convert_document
	* version.mk: new

Sat Jun 28 15:04:54 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.3]:
	* VERSION: bump
	* Makefile: make .pm ro
	* TODO.md: updates
	* doc-converter.conf
	- separate mod_per/mod_cgi directives
	* lib/DocConverter/Client.pm.in
	(get_document_status): new
	(fetch_metadata): new
	(wake_up): new
	(download_file): new
	(upload_file)
	- add file name to message
	- write metadata to folder
	(new): initialize logger
	* lib/DocConverter/Handler.pm.in
	(BEGIN): set log_level
	(handler)
	- return SERVER_ERROR if we can instantiate Client
	- output request info
	- dispatch requests to api methods
	(_api_wake_up): new
	(_api_upload): new
	(_api_status): new
	(_api__download): new
	(validate_document_id): new
	* lib/DocConverter/Role/Helpers.pm.in
	(convert_document)
	- write better error file
	* lib/DocConverter/Role/S3.pm.in
	(put_object)
	- accept file or content
	(get_object):
	- make sure $file is basename
	- use logger
	* lib/DocConverter/Utils.pm.in
	(slurp): new
	* lib/SQS/Queue/Worker/DocConverter.pm.in
	(handler)
	- expect document name instead of assuming only 1 file

Wed Jun 25 10:30:57 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.2]:
	* VERSION: bump
	* start-server: new
	* Dockerfile
	- use cpan.openbedrock.net
	- install aws cli
	- install start-server script
	* Makefile
	- refactor TARBALL target
	- refactor versin target
	(image): new target
	* doc-converter-handler.yml
	- update test queue url, bucket name, endpoint url
	- update log file
	* doc-converter.conf
	- use PerlPassEnv, not SetEnv
	- disable CGI unless ENABLE_CGI defined
	* docker-compose.yml
	- add healthcheck to ensure LocalStack is up before web service starts
	* lib/DocConverter/Role/Helpers.pm.in
	(write_status): set conversion_time to the benchmark content
	* requires: + Amazon::API
	* start-server: check to see that queue daemon is actually up
	* lib/DocConverter/Handler.pm.in: new

Tue Jun 24 05:57:41 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.1]:
	* VERSON: bump
	* doc-converter-handler.yml: new
	* lib/DocConverter/Client.pm.in: new
	* lib/DocConverter/Role/Helpers.pm.in: new
	* lib/DocConverter/Role/S3.pm.in: new
	* lib/DocConverter/Role/SQS.pm.in: new
	* lib/SQS/Queue/Worker/Converter.pm.in: new
	* lib/SQS/Queue/Worker/DocConverter.pm.in: new
	* t/00-helpers: new
	* Dockerfile
	- don't build mod_perl or apreq2, use deb packages
	- add libapache-mod-perl2, libapache2-mod-perl2-dev, lib-apache2-mod-apreq2
	* Makefile
	- add new files to build
	- perl -wc in build rule
	- setup dependencies to ensure build order
	* VERSION
	* bin/doc2pdf-client.pl
	- add version
	- update help
	* buildspec.yml
	- + test.pdf, doc-converter-handler.yaml
	* doc-converter.conf
	- add environment variables
	- LocationMatch section for upload/status/download endpoints
	- add mod_perl handler
	* lib/DocConverter/Constants.pm.in
	- + helpers, %MIME_TYPES
	* lib/SQS/Queue/Worker/DocConverter.pm.in
	- remove shebang
	* lib/SQS/Queue/Workder/Converter.pm.in: removed
	* requires
	- + API::SQS::API, Amazon::Credentials, Apache2::Cookie,
	- + Carp::Always, Data::UUID, Class::Accessor::Fast
	- + Role::Tiny, Role::Tiny::With, SQS::Queue::Workder, YAML::Tiny

Thu Jun 19 07:12:48 2025  Rob Lauer  <rlauer6@comcast.net>

	[1.0.0]:
	* VERSION: new
	* Makefile
	- build from .pm.in
	- update version
	(lib/DocConverter.pm): -> lib/DocConverter.pm.in
	(lib/DocConverter/Constants.pm): -> lib/DocConverter/Constants.pm.in
	(lib/DocConverter/Utils.pm): -> lib/DocConverter/Utils.pm.in
	* .gitignore: *.pm, modified, provides, extra-files
	* README.md: generated
	* provides: removed

Thu Jun 19 06:44:19 2025  Rob Lauer  <rlauer6@comcast.net>

	[0.01]:
	* bin/apply_private_policy_and_lifecycle.sh: new
	* bin/setup_ecs_s3_access.sh: new
	* postamble: new
	* resume-long.docx: new
	* .gitignore: DocConvert*/**, *.log, *.pdf, *.png
	* Dockerfile
	- + poppler-utils, ghostscript
	- mod_actions
	- install .conf to conf-available
	- install doc-converter.cgi
	* README.md: generated
	* bin/doc-converter.pl
	(slurp): new
	(fatal_error): return as JSON
	(fetch_config): fix sprintf bug
	(convert_document): refactors
	(main)
	- hard coded for LocalStack for now
	- refactors
	* bin/doc2pdf-client.pl
	- new options: --dns-bucket-names, --download, --secure, --config, --log-level, --s3-host
	- remove aws credential options
	(convert_document): refactors
	(main)
	(normalize_options): new
	(fetch_config): new
	(get_options): new
	(is_web_context): new
	(main)
	- setup for LocalStack if host is not s3.amazon.com
	- print details as hash or array
	* buildspec.yml
	(postamble): new
	(extra_files): + postamble, resume-long.docx
	* doc-converter.cfg: use template for doc2pdf path
	* extra-files: removed
	* lib/DocConverter/Utils.pm
	(@EXPORT): +fetch_from_s3, init_logger
	(get_from_s3): renamed to fetch_from_s3
	* postamble: new
	* requires: +CGI

Mon Jun 16 06:35:14 2025  Rob Lauer  <rlauer6@comcast.net>

	[BigBang]:
	* .gitignore: new
	* ChangeLog: new
	* Dockerfile: new
	* Makefile: new
	* README.md: new
	* bin/doc-converter.pl: new
	* bin/doc2pdf: new
	* bin/doc2pdf-client.pl: new
	* bin/fix-OOXMLRecalcMode.pl: new
	* bookworm-backports.list: new
	* buildspec.yml: new
	* doc-converter.cfg: new
	* doc-converter.conf: new
	* docker-compose.yml: new
	* extra-files: new
	* lib/DocConverter.pm: new
	* lib/DocConverter/Constants.pm: new
	* lib/DocConverter/Utils.pm: new
	* provides: new
	* requires: new
	* t/00-doc-converter.t: new
	* test-requires: new



